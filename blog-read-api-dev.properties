spring.datasource.url = jdbc:mysql://localhost:3306/myblog?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=pass@word1

#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/test
#spring.datasource.username=${MYSQL_USER:root}
#spring.datasource.password=${MYSQL_PASSWORD:pass@word1}

#spring.data.mongodb.host=my-blog-mongo
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=myblog
#spring.data.mongodb.uri="mongodb://localhost:27017/myblog"
#spring.data.mongodb.uri="mongodb://admin:password@localhost:27017/myblog"

server.port=8082

spring.application.name=blog-read-api

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui-blog.html
springdoc.swagger-ui.operationsSorter=method

management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*

#spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.ddl-auto=create-drop

eureka.client.service-url.default-zone=http://localhost:8761/eureka

#spring.kafka.bootstrap-servers=localhost:9092

#spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

value.from.file.kafka=localhost:9092